每个系统级线程都会有一个固定大小的的栈(一般默认可能是2MB)，这个栈主要用来保存函数递归调用时参数和局部变量。固定了栈的大小导致了两个问题：

    2.1 对于很多只需要很小的栈空间的线程来说是一个巨大的浪费
    2.2 对于少数需要巨大栈空间的线程来说又面临栈溢出的风险。

    Goroutine会以一个很小的栈启动(可能是2KB或4KB)，当遇到深度递归导致栈空间不足时，Goroutine会根据需要动态的伸缩栈的大小(主流实现中栈的大小可达到1G)。因为启动的代价很小，我们可以启动成千上万个Goroutine.